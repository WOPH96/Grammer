#깊이 우선 탐색 DFS

#깊은 부분을 우선적으로 탐색

# 스택 자료구조 사용
'''
1. 탐색 시작 노드를 스택에 삽입하고 방문 처리
2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면 그 노드를 스택에 넣고 방문처리합니다.
    방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼냅니다.
3. 더 이상 2번의 과정을 수행할 수 없을 때까지 반복합니다.
'''

def dfs(graph, v, visited):
    #stack 대신 재귀함수를 사용해 메모리의 스택을 쓴다
    visited[v] = True;
    print(v, end = " ")
    for i in graph[v]: # v번 노드의 연결된 애들 살피기
        if not visited[i]: # 연결노드를 방문을 안했다면
            dfs(graph,i,visited) # 현재 노드부터 방문 using recursive
   

graph = [
    [], #0번노드
    [2,3,8], # 1번노드
    [1,7], # 2번노드
    [1,4,5], #3번노드
    [3,5], # 4번노드
    [3,4],
    [7],
    [2,6,8],
    [1,7]
]

visited = [False] * 9

dfs(graph,1,visited) # 노드정보 ,시작위치, 방문정보
print()
