# 구현 => 풀이를 떠올리는 것은 쉽지만 소스코르도 옮기기 어려운 문제

# 알고리즘은 간단한데 코드가 지나칠만큼 길어지는 문제
# 실수 연산을 다루고, 특정 소수점 자리까지 출력해야 하는 문제
# 문자열을 특정한 기준에 따라서 끊어 처리해야 하는 문제
# 적절한 라이브러리를 찾아서 사용해야 하는 문제 eg) 순열, 조합

# 많은 코드를 작성하고 많은 라이브러리를 사용해본다면 쉽게 풀 수 있음.

# Simulation 유형 / 완전 탐색 / 구현 유형

# 나이트가 갈 수 있는 경우의 수 구하기

# 기본값 a1

# c3 기준 8 개

init = str(input())

x, y = ord(init[0])-ord('a'), ord(init[1])-ord('1')

dx = [-2, -2, 2, 2, 1, -1, 1, -1]
dy = [1, -1, 1, -1, -2, -2, 2, 2]

cnt = 0

print(x, y)

for i in range(8):
    tx = x - dx[i]
    ty = y - dy[i]

    if(tx < 0 or ty < 0 or tx > 7 or ty > 7):
        continue

    cnt += 1

print(cnt)
